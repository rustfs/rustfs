[package]
name = "ecstore"
version.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lints]
workspace = true

[dependencies]
async-trait.workspace = true
backon.workspace = true
blake2 = { workspace = true }
bytes.workspace = true
common.workspace = true
policy.workspace = true
chrono.workspace = true
glob = { workspace = true }
thiserror.workspace = true
flatbuffers.workspace = true
futures.workspace = true
tracing.workspace = true
serde.workspace = true
time.workspace = true
bytesize.workspace = true
serde_json.workspace = true
tracing-error.workspace = true
s3s.workspace = true
http.workspace = true
highway = { workspace = true }
url.workspace = true
uuid = { workspace = true, features = ["v4", "fast-rng", "serde"] }
reed-solomon-erasure = { workspace = true }
transform-stream = "0.3.1"
lazy_static.workspace = true
lock.workspace = true
regex = { workspace = true }
netif = { workspace = true }
nix = { workspace = true }
path-absolutize = "3.1.1"
protos.workspace = true
rmp.workspace = true
rmp-serde.workspace = true
tokio-util = { workspace = true, features = ["io", "compat"] }
crc32fast = "1.4.2"
siphasher = "1.0.1"
base64-simd = "0.8.0"
sha2 = { version = "0.11.0-pre.4" }
hex-simd = "0.8.0"
path-clean = "1.0.1"
tempfile.workspace = true
tokio = { workspace = true, features = ["io-util", "sync", "signal"] }
tokio-stream = { workspace = true }
tonic.workspace = true
tower.workspace = true
byteorder = "1.5.0"
xxhash-rust = { version = "0.8.15", features = ["xxh64"] }
num = "0.4.3"
num_cpus = { workspace = true }
s3s-policy.workspace = true
rand.workspace = true
pin-project-lite.workspace = true
md-5.workspace = true
madmin.workspace = true
workers.workspace = true
reqwest = { workspace = true }
urlencoding = "2.1.3"
smallvec = { workspace = true }
shadow-rs.workspace = true

[target.'cfg(not(windows))'.dependencies]
nix = { workspace = true }

[target.'cfg(windows)'.dependencies]
winapi = { workspace = true }


[dev-dependencies]
tokio = { workspace = true, features = ["rt-multi-thread", "macros"] }

[build-dependencies]
shadow-rs = { workspace = true, features = ["build", "metadata"] }
