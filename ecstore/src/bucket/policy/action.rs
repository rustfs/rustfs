use serde::{Deserialize, Serialize};
use std::collections::HashSet;

#[derive(Debug, Deserialize, Serialize, Default,Clone)]
pub struct ActionSet(HashSet<Action>);

impl ActionSet {}

// 定义Action枚举类型
#[derive(Debug, Clone, PartialEq, Eq, Deserialize, Serialize, Default, Hash)]
pub enum Action {
    AbortMultipartUpload,
    CreateBucket,
    DeleteBucket,
    ForceDeleteBucket,
    DeleteBucketPolicy,
    DeleteBucketCors,
    DeleteObject,
    GetBucketLocation,
    GetBucketNotification,
    GetBucketPolicy,
    GetBucketCors,
    GetObject,
    GetObjectAttributes,
    HeadBucket,
    ListAllMyBuckets,
    ListBucket,
    GetBucketPolicyStatus,
    ListBucketVersions,
    ListBucketMultipartUploads,
    ListenNotification,
    ListenBucketNotification,
    ListMultipartUploadParts,
    PutBucketLifecycle,
    GetBucketLifecycle,
    PutBucketNotification,
    PutBucketPolicy,
    PutBucketCors,
    PutObject,
    DeleteObjectVersion,
    DeleteObjectVersionTagging,
    GetObjectVersion,
    GetObjectVersionAttributes,
    GetObjectVersionTagging,
    PutObjectVersionTagging,
    BypassGovernanceRetention,
    PutObjectRetention,
    GetObjectRetention,
    GetObjectLegalHold,
    PutObjectLegalHold,
    GetBucketObjectLockConfiguration,
    PutBucketObjectLockConfiguration,
    GetBucketTagging,
    PutBucketTagging,
    GetObjectTagging,
    PutObjectTagging,
    DeleteObjectTagging,
    PutBucketEncryption,
    GetBucketEncryption,
    PutBucketVersioning,
    GetBucketVersioning,
    PutReplicationConfiguration,
    GetReplicationConfiguration,
    ReplicateObject,
    ReplicateDelete,
    ReplicateTags,
    GetObjectVersionForReplication,
    RestoreObject,
    ResetBucketReplicationState,
    PutObjectFanOut,
    #[default]
    AllActions,
}

impl Action {
    // 将字符串转换为Action枚举
    fn from_str(s: &str) -> Option<Self> {
        match s {
            "s3:AbortMultipartUpload" => Some(Action::AbortMultipartUpload),
            "s3:CreateBucket" => Some(Action::CreateBucket),
            "s3:DeleteBucket" => Some(Action::DeleteBucket),
            "s3:ForceDeleteBucket" => Some(Action::ForceDeleteBucket),
            "s3:DeleteBucketPolicy" => Some(Action::DeleteBucketPolicy),
            "s3:DeleteBucketCors" => Some(Action::DeleteBucketCors),
            "s3:DeleteObject" => Some(Action::DeleteObject),
            "s3:GetBucketLocation" => Some(Action::GetBucketLocation),
            "s3:GetBucketNotification" => Some(Action::GetBucketNotification),
            "s3:GetBucketPolicy" => Some(Action::GetBucketPolicy),
            "s3:GetBucketCors" => Some(Action::GetBucketCors),
            "s3:GetObject" => Some(Action::GetObject),
            "s3:GetObjectAttributes" => Some(Action::GetObjectAttributes),
            "s3:HeadBucket" => Some(Action::HeadBucket),
            "s3:ListAllMyBuckets" => Some(Action::ListAllMyBuckets),
            "s3:ListBucket" => Some(Action::ListBucket),
            "s3:GetBucketPolicyStatus" => Some(Action::GetBucketPolicyStatus),
            "s3:ListBucketVersions" => Some(Action::ListBucketVersions),
            "s3:ListBucketMultipartUploads" => Some(Action::ListBucketMultipartUploads),
            "s3:ListenNotification" => Some(Action::ListenNotification),
            "s3:ListenBucketNotification" => Some(Action::ListenBucketNotification),
            "s3:ListMultipartUploadParts" => Some(Action::ListMultipartUploadParts),
            "s3:PutLifecycleConfiguration" => Some(Action::PutBucketLifecycle),
            "s3:GetLifecycleConfiguration" => Some(Action::GetBucketLifecycle),
            "s3:PutBucketNotification" => Some(Action::PutBucketNotification),
            "s3:PutBucketPolicy" => Some(Action::PutBucketPolicy),
            "s3:PutBucketCors" => Some(Action::PutBucketCors),
            "s3:PutObject" => Some(Action::PutObject),
            "s3:DeleteObjectVersion" => Some(Action::DeleteObjectVersion),
            "s3:DeleteObjectVersionTagging" => Some(Action::DeleteObjectVersionTagging),
            "s3:GetObjectVersion" => Some(Action::GetObjectVersion),
            "s3:GetObjectVersionAttributes" => Some(Action::GetObjectVersionAttributes),
            "s3:GetObjectVersionTagging" => Some(Action::GetObjectVersionTagging),
            "s3:PutObjectVersionTagging" => Some(Action::PutObjectVersionTagging),
            "s3:BypassGovernanceRetention" => Some(Action::BypassGovernanceRetention),
            "s3:PutObjectRetention" => Some(Action::PutObjectRetention),
            "s3:GetObjectRetention" => Some(Action::GetObjectRetention),
            "s3:GetObjectLegalHold" => Some(Action::GetObjectLegalHold),
            "s3:PutObjectLegalHold" => Some(Action::PutObjectLegalHold),
            "s3:GetBucketObjectLockConfiguration" => Some(Action::GetBucketObjectLockConfiguration),
            "s3:PutBucketObjectLockConfiguration" => Some(Action::PutBucketObjectLockConfiguration),
            "s3:GetBucketTagging" => Some(Action::GetBucketTagging),
            "s3:PutBucketTagging" => Some(Action::PutBucketTagging),
            "s3:GetObjectTagging" => Some(Action::GetObjectTagging),
            "s3:PutObjectTagging" => Some(Action::PutObjectTagging),
            "s3:DeleteObjectTagging" => Some(Action::DeleteObjectTagging),
            "s3:PutEncryptionConfiguration" => Some(Action::PutBucketEncryption),
            "s3:GetEncryptionConfiguration" => Some(Action::GetBucketEncryption),
            "s3:PutBucketVersioning" => Some(Action::PutBucketVersioning),
            "s3:GetBucketVersioning" => Some(Action::GetBucketVersioning),
            "s3:PutReplicationConfiguration" => Some(Action::PutReplicationConfiguration),
            "s3:GetReplicationConfiguration" => Some(Action::GetReplicationConfiguration),
            "s3:ReplicateObject" => Some(Action::ReplicateObject),
            "s3:ReplicateDelete" => Some(Action::ReplicateDelete),
            "s3:ReplicateTags" => Some(Action::ReplicateTags),
            "s3:GetObjectVersionForReplication" => Some(Action::GetObjectVersionForReplication),
            "s3:RestoreObject" => Some(Action::RestoreObject),
            "s3:ResetBucketReplicationState" => Some(Action::ResetBucketReplicationState),
            "s3:PutObjectFanOut" => Some(Action::PutObjectFanOut),
            "s3:*" => Some(Action::AllActions),
            _ => None,
        }
    }
}
